version: "3.8"

services:
  main:
    container_name: main-container-stampings
    build:
      context: .
      target: development
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - ${PORT}:${PORT}
      - 9230:9230
    command: npm run start:prod
    env_file:
      - .env
    depends_on:
      - database
  #Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: nginx-stampings
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./dist-fe:/usr/share/nginx/html
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  #MongoDB Service
  database:
    image: mongo:latest
    container_name: mongo-container-stampings
    restart: always
    environment:
      MONGO_INITDB_DATABASE: ${DB_NAME}
      MONGO_INITDB_ROOT_USERNAME: ${DB_ADMIN_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ADMIN_PWD}
      DATABASE_USERNAME: ${DB_USER}
      DATABASE_PASSWORD: ${DB_PWD}
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "${DB_PORT}:${DB_PORT}"
    command: [--auth]
volumes:
  pgdata:
